name: 真我neo7内核

env:
  android_version: "android14"
  kernel_version: "6.1"
  sub_level: "75"
  extra_config: |
    CONFIG_ARCH_SUPPORTS_PGO_CLANG=y
    CONFIG_NETFILTER_XT_TARGET_LOG=y

on:
  workflow_dispatch:
    inputs:
      kernelsu_variant:
        description: "选择 KernelSU"
        required: true
        type: choice
        options:
          - Official
          - Next
          - MKSU
          - SukiSU
        default: SukiSU
      kernelsu_branch:
        description: "选择 ksu 分支"
        required: true
        type: choice
        options:
          - Stable(标准)
          - Dev(开发)
          - Other(其他/指定)
        default: Stable(标准)
      version:
        description: "自定义版本名(如6.1.93后面的字符/留空则使用默认版本号)"
        required: false
        type: string
        default: "-android14-11-o-ge81a9ede9e97"
      use_kpm:
        description: "是否开启KPM功能?"
        required: true
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai
    steps:
      - name: 设定 CONFIG 环境变量
        run: |
          pwd; df -h
          sudo apt-get update
          echo CONFIG="${{ env.android_version }}-${{ env.kernel_version }}" | tee -a $GITHUB_ENV

      - name: 克隆 AnyKernel3 和其他依赖项
        run: |
          echo "Cloning AnyKernel3 and other dependencies..."

          ANYKERNEL_BRANCH="gki-2.0"
          SUSFS_BRANCH="gki-${{ env.android_version }}-${{ env.kernel_version }}"

          # Debug print the branches
          echo "Using branch for SUSFS: $SUSFS_BRANCH"

          # Clone repositories using the branch names
          git clone https://github.com/WildPlusKernel/AnyKernel3.git -b "$ANYKERNEL_BRANCH"
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b "$SUSFS_BRANCH"
          git clone https://github.com/WildPlusKernel/kernel_patches.git
          # Sukisu的补丁仓库
          git clone https://github.com/SukiSU-Ultra/SukiSU_patch.git

      - name: 克隆内核源码
        run: |
          rm -rf $CONFIG
          git clone -j $(nproc --all) --no-tags --depth=1 https://github.com/realme-kernel-opensource/realme_neo7-AndroidV-vendor-source $CONFIG
          cd $CONFIG
          git clone -j $(nproc --all) --no-tags --depth=1 https://github.com/realme-kernel-opensource/realme_neo7-AndroidV-kernel-source common
          # echo "正在去除 ABI 保护 & 去除 dirty 后缀..."
          # rm common/android/abi_gki_protected_exports_* || true
          for f in common/scripts/setlocalversion; do
            sed -i 's/ -dirty//g' "$f"
            sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' "$f"
          done

      - name: 添加 KernelSU
        run: |
          branch_input="${{ inputs.kernelsu_branch }}"
          variant_input="${{ inputs.kernelsu_variant }}"

          case "$branch_input" in
            "Stable(标准)")
              BRANCH='-'
              case "$variant_input" in
                "Official" | "MKSU") ;;
                "Next")              ;;
                "SukiSU")            BRANCH='-s susfs-main' ;;
                *)
                  echo "错误：未定义开发分支的变体 '$variant_input'" >&2
                  exit 1
                  ;;
              esac
              ;;
            "Dev(开发)")
              case "$variant_input" in
                "Official" | "MKSU") BRANCH='-s main' ;;
                "Next")              BRANCH='-s next' ;;
                "SukiSU")            BRANCH='-s susfs-test' ;;
                *)
                  echo "错误：未定义开发分支的变体 '$variant_input'" >&2
                  exit 1
                  ;;
              esac
              ;;
            *)
              echo "错误：需要自定义分支时未提供参数" >&2
              exit 1
              ;;
          esac

          cd "$CONFIG"
          if [ "${{ inputs.kernelsu_variant }}" == "Official" ]; then
            echo "Adding KernelSU Official..."
            curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash $BRANCH
          elif [ "${{ inputs.kernelsu_variant }}" == "Next" ]; then
            echo "Adding KernelSU Next..."
            curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash $BRANCH
          elif [ "${{ inputs.kernelsu_variant }}" == "MKSU" ]; then
            echo "Adding KernelSU MKSU..."
            curl -LSs "https://raw.githubusercontent.com/5ec1cff/KernelSU/main/kernel/setup.sh" | bash $BRANCH
          elif [ "${{ inputs.kernelsu_variant }}" == "SukiSU" ]; then
            echo "Adding KernelSU SukiSU..."
            curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash $BRANCH
          fi

      - name: 为 KernelSU 变体安装 SUSFS 补丁
        run: |
          cd "$CONFIG"

          echo "Applying SUSFS patches..."

          # Copy SUSFS patches
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ env.android_version }}-${{ env.kernel_version }}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          if [ "${{ inputs.kernelsu_variant }}" == "Official" ]; then
            echo "Applying SUSFS patches for Official KernelSU..."
            cd ./KernelSU
            cp ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./
            patch -p1 --forward --fuzz=3 < 10_enable_susfs_for_ksu.patch
          elif [ "${{ inputs.kernelsu_variant }}" == "Next" ]; then
            echo "Applying SUSFS patches for KernelSU-Next..."
            cd ./KernelSU-Next
            curl -LSs https://github.com/zzh20188/GKI_KernelSU_SUSFS/raw/refs/heads/dev/0001-kernel-patch-susfs-v1.5.7-to-KernelSU-Next-v1.0.7.patch -o susfs.patch 
            patch -p1 --forward < susfs.patch

          #   cp ../../kernel_patches/next/kernel-patch-susfs-v1.5.7-to-KernelSU-Next.patch ./
          #   patch -p1 --forward --fuzz=3 < kernel-patch-susfs-v1.5.7-to-KernelSU-Next.patch || true
          #   # 临时补丁
          #   curl -LSs "https://github.com/zzh20188/GKI_KernelSU_SUSFS/raw/refs/heads/dev/fix_ksun_susfs.patch" -o fix_ksun_susfs.patch
          #   echo '应用KSUN临时修复补丁'
          #   patch -p1 --forward < fix_ksun_susfs.patch
            sed -i '/bool ksu_devpts_hook = false;/d' ./kernel/sucompat.c
          elif [ "${{ inputs.kernelsu_variant }}" == "MKSU" ]; then
            echo "Applying SUSFS patches for MKSU..."
             cd ./KernelSU
            cp ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./
            patch -p1 --forward --fuzz=3 < 10_enable_susfs_for_ksu.patch || true

            echo "Applying MKSU specific SUSFS patch..."
            cp ../../kernel_patches/mksu/mksu_susfs.patch ./
            patch -p1 < mksu_susfs.patch || true
            cp ../../kernel_patches/mksu/fix.patch ./
            patch -p1 < fix.patch || true
          elif [ "${{ inputs.kernelsu_variant }}" == "SukiSU" ]; then
            echo "Applying SUSFS patches for SukiSU..."
             cd ./KernelSU


            echo "Applying SukiSU specific SUSFS patch..."
          else
            echo "Invalid KernelSU variant selected!"
            exit 1
          fi

          cd ../common
          patch -p1 --fuzz=3 < 50_add_susfs_in_gki-${{ env.android_version }}-${{ env.kernel_version }}.patch || true

      - name: 应用新的HOOKS补丁
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/common"

          if [ "${{ inputs.kernelsu_variant }}" == "Next" ]; then
            echo "Applying hooks for KernelSU-Next..."
            cp ../../kernel_patches/next/syscall_hooks.patch ./
            patch -p1 -F 3 < syscall_hooks.patch
          elif [ "${{ inputs.kernelsu_variant }}" == "SukiSU" ]; then
            echo "Applying hooks for SukiSU..."
            cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
            patch -p1 -F 3 < syscall_hooks.patch
          fi

      - name: 应用隐藏某特征的补丁
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/common"
          # Apply additional patch
          if [ "${{ inputs.kernelsu_variant }}" == "SukiSU" ]; then
          cp ../../SukiSU_patch/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch
          else
            cp ../../kernel_patches/69_hide_stuff.patch ./
            patch -p1 -F 3 < 69_hide_stuff.patch
          fi

      - name: 添加SUSFS配置设置
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG"
          echo "Adding configuration settings to gki_defconfig..."

          # Add KSU configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig

          if [ "${{ inputs.kernelsu_variant }}" == "Next" ]; then
            echo "CONFIG_KSU_KPROBES_HOOK=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          elif [ "${{ inputs.kernelsu_variant }}" == "SukiSU" ]; then
            if [ "${{ inputs.use_kpm }}" == "true" ]; then
              echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
            fi

            echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          elif [ "${{ inputs.kernelsu_variant }}" == "MKSU" ]; then
            echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          fi

          # Add additional tmpfs config setting
          echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TMPFS_POSIX_ACL=y" >> ./common/arch/arm64/configs/gki_defconfig

          # Add additional config setting
          echo "CONFIG_IP_NF_TARGET_TTL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_TARGET_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_MATCH_HL=y" >> ./common/arch/arm64/configs/gki_defconfig


          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki

          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig

      - name: 配置内核名称
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG"

          sed -i 's|-dirty||' ./common/scripts/setlocalversion
          sed -i '$s|echo "\$res"|echo "${{ inputs.version }}"|' ./common/scripts/setlocalversion
          sed -i '/^CONFIG_LOCALVERSION=/ s/="\([^"]*\)"/="${{ inputs.version }}"/' ./common/arch/arm64/configs/gki_defconfig

          # Run perl command to modify UTS_VERSION
          CURRENT_TIME=$(date -u +"%a %b %d %H:%M:%S UTC %Y")
          echo "CURRENT_TIME=$CURRENT_TIME"
          perl -pi -e "s{UTS_VERSION=\"\\\$\(echo \\\$UTS_VERSION \\\$CONFIG_FLAGS \\\$TIMESTAMP \\| cut -b -\\\$UTS_LEN\)\"}{UTS_VERSION=\"#1 SMP PREEMPT $CURRENT_TIME\"}" ./common/scripts/mkcompile_h

          sed -i '/^[[:space:]]*"protected_exports_list"[[:space:]]*:[[:space:]]*"android\/abi_gki_protected_exports_aarch64",$/d' ./common/BUILD.bazel
          rm -rf ./common/android/abi_gki_protected_exports_*

      - name: 恢复工具链 clang
        id: toolchain-clang
        uses: actions/cache@main
        with:
          path: toolchain-clang
          key: toolchain-clang-${{ runner.os }}

      - name: 下载工具链 clang
        if: steps.toolchain-clang.outputs.cache-hit != 'true'
        run: |
          mkdir -p toolchain-clang
          wget -qO - https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main-kernel-2025/clang-r547379.tar.gz | tar -zxvC toolchain-clang

      - name: 设置工具链
        run: |
          echo ${{ github.workspace }}/toolchain-clang/bin | tee -a $GITHUB_PATH
          sudo apt-get install binutils-arm-linux-gnueabihf binutils-aarch64-linux-gnu -y

      - name: 配置 swap
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10

      - name: 配置 ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: realme_neo7
          max-size: 2G

      - name: 构建内核
        env:
          CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
          CCACHE_NOHASHDIR: "true"
          CCACHE_HARDLINK: "true"
        run: |
          sudo apt-get install libelf-dev pahole -y
          cd "$CONFIG/common"
          echo "$extra_config" | tee arch/arm64/configs/extra.config
          args="-j $(nproc --all) O=out ARCH=arm64 LLVM=1 CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnuabeihf-"
          make $args gki_defconfig extra.config && make $args CC="ccache clang"

      - name: 修补 Image 文件 安卓14和安卓15(仅限sukisu)
        if: ${{ inputs.use_kpm && inputs.kernelsu_variant == 'SukiSU' && (env.android_version == 'android14' || env.android_version == 'android15') }}
        run: |
          if [ "${{ env.kernel_version }}" != "6.6" ]; then
            echo "Patching Image file..."
            cd "$CONFIG/common/out/arch/arm64/boot/"
            curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU_patch/refs/heads/main/kpm/patch_linux" -o patch
            chmod 777 patch
            ./patch
            rm -rf Image
            mv oImage Image
          fi

      - name: 创建 AnyKernel3
        run: |
          mv $CONFIG/common/out/arch/arm64/boot/Image .
          cd ./AnyKernel3

          # Create and upload zip for each format
          ZIP_NAME="${{ env.android_version }}-${{ env.kernel_version }}.${{ env.sub_level }}-AnyKernel3.zip"
          echo "Creating zip file: $ZIP_NAME..."
          mv ../Image ./Image
          zip -r "../$ZIP_NAME" ./*

      - name: 检查编译资产
        run: |
          pwd; df -h
          mkdir outputs
          mv *AnyKernel3.zip outputs
          mv $CONFIG/common/out/.config outputs/

          mkdir outputs-ko
          find $CONFIG/common/out -type f -name '*.ko' | while read f; do
            mv $f outputs-ko/
          done

      - name: 上传编译资产
        uses: actions/upload-artifact@main
        with:
          include-hidden-files: true
          name: ${{ inputs.kernelsu_variant }}_kernel-${{ env.android_version }}-${{ env.kernel_version }}
          path: |
            outputs/

      - name: 上传编译资产
        uses: actions/upload-artifact@main
        with:
          include-hidden-files: true
          name: ${{ inputs.kernelsu_variant }}_ko-${{ env.android_version }}-${{ env.kernel_version }}
          path: |
            outputs-ko/
